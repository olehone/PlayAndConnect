@{
    ViewData["Title"] = "Chats";
}
@using PlayAndConnect.ViewModels
@model List<ChatViewModel>

<style>
    /* Оновлені стилі */

    .chat-container {
        display: flex;
        min-height: 100%;
        padding: 2%;
        box-sizing: border-box;
    }

    .chat-list {
        flex: 3;
        overflow-y: scroll;
        margin-right: 20px;
    }

    .chat {
        flex: 7;
        display: flex;
        flex-direction: column;
    }

    .chat-messages {
        flex-grow: 1;
        overflow-y: scroll;
        margin-bottom: 20px;
        
        background-color: #f9f9f9;
    }
    .chat-messages-changes {
        flex-grow: 1;
        overflow-y: scroll;
        margin-bottom: 20px;
        
        background-color: #f9f9f9;
    }
    .chat-input {
        display: flex;
        margin-top: 10px;
    }

    .chat-input input[type="text"] {
        flex-grow: 1;
        margin-right: 10px;
        padding: 5px;
    }

    .chat-input button {
        padding: 5px 10px;
        background-color: #1b6ec2;
        color: #fff;
        border: none;
        cursor: pointer;
    }
</style>

<div class="chat-container">
    <div class="chat-list">
        @ViewBag.SysMessage
        @foreach (ChatViewModel chat in ViewBag.Chats)
        {
            <div class="chat-item @(chat.IsSelected ? "selected" : "")" data-login="@chat.Login">
                <div class="user-info">
                    <div class="avatar">
                        <a href="@Url.Action("Account", "Home", new { login = chat.Login })">
                            <img class="user-image" src="@chat.ImagePath" style="cursor: pointer;">
                        </a>
                    </div>
                    <div class="user-details">
                        <h3 class="chat-login">@chat.Login</h3>

                            @if (@chat.IsNew)
                            {
                                <p class="chat-new-message">@chat.Message</p>
                            }
                            else
                            {
                                <p class="chat-message">@chat.Message</p>
                            }
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="chat">
        
        <div class="chat-messages">
            <p>Виберіть чат</p>
        </div>

        <div class="chat-input">
            <input type="text" placeholder="Введіть повідомлення" id = "message-input">
           <button id="send-button">Надіслати</button>
        </div>
    </div>
</div>
<style>
    body {
        
        /*display: flex;*/
        /*align-items: center;*/
        /*justify-content: center;*/
        background: #dce8f1;
        /*margin: 2% 0;*/
    }
html{
    overflow-x: hidden;
    overflow-y: hidden;
    max-height: 10px;
}
.container {
  position: relative;
  max-width: 900px;
  min-height: 500px;
  width: 100%;
  padding: 5% 1% 5% 1%; /* Відступи зверху й знизу - 5% */
  border-radius: 8px;
  background-color: #fff;
}

.chat-container {
  display: flex;
  /*height: calc(98% - 4px); /* Знижуємо висоту на 10% */
}

.chat-list {
  width: 30%;
  overflow-y: auto;
  margin-right: 5%; /* Відступ праворуч - 5% */
}

.chat {
  width: 65%; /* Змінюємо ширину на 65% */
  overflow-y: auto;
  max-width: 900px;
}

    .chat-input {
        display: flex;
        align-items: center;
        margin-top: 20px;
    }

    .chat-input input {
        flex: 1;
        height: 40px;
        border-radius: 4px;
        border: 1px solid #ccc;
        padding: 0 10px;
    }

    .chat-input button {
        height: 40px;
        margin-left: 10px;
        padding: 0 15px;
        border: none;
        border-radius: 4px;
        background-color: #314e6b;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .chat-input button:hover {
        background-color: #2c435c;
    }

    /* Решта стилів... */

    .chat-item {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        transition: background-color 0.3s;
        background-color: #f9f9f9;
    }

    .chat-item:hover:not(.selected) {
        background-color: #f5f5f5;
    }

    .selected {
        background-color: #ebebeb;
    }

    .user-info {
        margin-left: 5px;
        display: flex;
        align-items: center;
    }

    .avatar {
        width: 50px;
        height: 50px;
        margin-right: 10px;
        
        border-radius: 50%;
        overflow: hidden;
    }

    .user-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        cursor: pointer;
    }

    .user-details {
        flex-grow: 1;
    }

    .chat-login {
        font-size: 18px;
        margin-bottom: 5px;
    }

    .chat-message {
        font-size: 10px;
        color: gray;
    }
.chat-messages {
    max-height: 250px; /* Встановлюємо фіксовану висоту для контейнера повідомлень */
    overflow-y: auto; /* Встановлюємо автоматичну прокрутку */
    margin-bottom: 20px;
    background-color: #f9f9f9;
    scrollbar-width: none; /* Приховуємо панель прокрутки */
    -ms-overflow-style: none; /* Приховуємо панель прокрутки в IE та Edge */
}

/* Створюємо кастомні стилі для прокрутки */
.chat-messages::-webkit-scrollbar {
    width: 6px; /* Встановлюємо ширину прокрутки */
    background-color: transparent; /* Задаємо прозорий фон */
}

/* Стилі для слайдера (повзунка) прокрутки */
.chat-messages::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3); /* Задаємо кольорову заповненість повзунка */
    border-radius: 3px; /* Задаємо радіус границі повзунка */
}

/* Стилі для прокрученої частини панелі прокрутки */
.chat-messages::-webkit-scrollbar-track {
    background-color: transparent; /* Задаємо прозорий фон прокрученої частини */
}

/* Стилі для прокрутки при наведенні курсора */
.chat-messages::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.5); /* Змінюємо кольорову заповненість повзунка при наведенні курсора */
}



    .chat-new-message {
        font-size: 10px;
        color: rgb(104, 104, 129);
        font-weight: bold;
    }
    .chat-new-message-change {
        font-size: 10px;
        color: rgb(104, 104, 129);
        font-weight: bold;
    }
.system-message {
  background-color: #eaeaea;
  /*color: #4d37bb; /* змініть належно до вашого смаку */
  width: 60%;
  margin-left: auto;
  margin-right: auto;
  border-radius: 10px;
  padding: 10px;
  margin-bottom: 10px;
  overflow-wrap: break-word;
}

.own-message {
  background-color: #eaeaea;
  /*color: #ff00c8; /* змініть належно до вашого смаку */
  width: 40%;
  margin-left: auto;
  border-radius: 10px;
  padding: 10px;
  margin-bottom: 10px;
  overflow-wrap: break-word;
}

.other-message {
  background-color: #eaeaea;
  /*color: #00ff2a; /* змініть належно до вашого смаку */
  width: 40%;
  margin-right: auto;
  border-radius: 10px;
  padding: 10px;
  margin-bottom: 10px;
  overflow-wrap: break-word;
}

.time {
  color: grey;
  text-align: right;
  font-size: 0.8em; /* зменшіть належно до вашого смаку */
}



</style>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    var login;
    var chatInterval;
    var lastMessage;

    $(document).ready(function() {
        console.log(login);
        //setInterval(makeChat, 4000);

        // Обробник натискання на кнопку "Надіслати"
        $("#send-button").click(function() {
            if (login !== null)
                console.log(login);
            else
                console.log("clown");
            sendMessage();
        });

        // Обробник натискання клавіші Enter
        $("#message-input").keypress(function(event) {
            if (event.which === 13) { // Код клавіші Enter
                if ($.trim($("#message-input").val()) !== "") { // Перевірка на непорожнє поле введення
                    console.log(login);
                    sendMessage();
                }
            }
        });

        $(".chat-item").click(function(e) {
            var target = e.target;
            login = $(this).data("login");
            if (!$(target).hasClass("user-image")) {
                // Перевіряємо, чи вибраний чат вже є поточним
                if (!$(this).hasClass("selected")) {
                    // Зупиняємо попередній таймер оновлення чату, якщо він був запущений
                    clearInterval(chatInterval);
                    // Виконуємо запит до сервера та оновлюємо чат
                    makeChat()
                    //function() {
                    //    scrollToBottom();
                    //});
                    // Запускаємо новий таймер оновлення чату
                    chatInterval = setInterval(makeChat, 4000);
                }

                // Знімаємо позначку поточного чату з попереднього вибору
                $(".chat-item.selected").removeClass("selected");

                // Позначаємо вибраний чат як поточний
                $(this).addClass("selected");

                // Прокручуємо до низу
                //scrollToBottom();
            }
        });

        $(".user-image").click(function(e) {
            e.preventDefault();
            var link = $(this).closest(".avatar").find("a").attr("href");
            if (link !== undefined) {
                window.location.href = link;
            }
        });
    });

function makeChat(callback) {
    if (login !== undefined) {
        console.log(lastMessage);
        // Виконуємо запит до сервера
        $.ajax({
            url: "/Home/GetMessages",
            method: "POST",
            data: { interlocutorLogin: login, lastMessageText: lastMessage },
            success: function(response) {
                if (response === false) {
                    // Логіка, коли останнє повідомлення співпадає
                    console.log("Last message matches");
                } else {
                    showMessages(response);
                    scrollToBottom();
                }
                if (callback) {
                    callback(); // Виклик функції зворотного виклику
                }
            },
            error: function(xhr, status, error) {
                // Обробка помилок
            }
        });
    }
}
    function sendMessage() {
        var message = $("#message-input").val(); // Отримуємо значення з поля введення
        console.log("test");
        // Виконуємо AJAX-запит до сервера
        $.ajax({
            url: "/Home/SendMessage",
            method: "POST",
            data: { message: message, login: login}, // Додаємо логін до даних запиту
            success: function(response) {
                // Обробляємо успішну відповідь від сервера
                //scrollToBottom();
                lastMessage = null;
                makeChat()//function() {
                //    scrollToBottom();
                //});
                console.log("sctollToBottom");
            },
            error: function(xhr, status, error) {
                // Обробка помилок
                console.log(error);
            }
        });

        // Очищаємо поле введення
        $("#message-input").val("");
    }

    function scrollToBottom() {
        var chatMessages = $(".chat-messages");
        chatMessages.scrollTop(chatMessages.prop("scrollHeight"));
    }

    function showMessages(options) {
        // Отримуємо посилання на елемент з класом chat-messages
        var chatMessages = $(".chat-messages");
        var selectedItem = document.querySelector('.chat-item.selected');
        // Очищаємо вміст елементу chat-messages
        chatMessages.empty();

        // Перебираємо список повідомлень
        for (var i = 0; i < options.length; i++) {
            var message = options[i];
            if (i === options.length - 1) {
                lastMessage = message.text;
                // Зміна значення елемента з класом "chat-new-message"
                var newMessageElement = selectedItem.querySelector('.chat-new-message');
                if(message.text.length<33){
                newMessageElement.textContent = message.text;}
                else{
                    newMessageElement.textContent = message.text.substr(0, 27)+"..";
                }
            }
            var messageClass = '';
            var messageBlock;

            if (message.isSystem) {
                messageClass = 'system-message';
                messageBlock = `
                    <div class="${messageClass}">
                        <div class="text">
                            ${message.text}
                        </div>
                    </div>
                `;
            } else if (message.isOwn) {
                messageClass = 'own-message';
                messageBlock = `
                    <div class="${messageClass}">
                        <div class="text">
                            ${message.text}
                        </div>
                        <div class="time">
                            ${message.time}
                        </div>
                    </div>
                `;
            } else {
                messageClass = 'other-message';
                messageBlock = `
                    <div class="${messageClass}">
                        <div class="text">
                            ${message.text}
                        </div>
                        <div class="time">
                            ${message.time}
                        </div>
                    </div>
                `;
            }

            // Додаємо блок повідомлення до chat-messages
            chatMessages.append(messageBlock);
        }
        
    }
</script>